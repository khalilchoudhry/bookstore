{
	"info": {
		"_postman_id": "867927fd-7074-4126-82c0-7d402d6e591e",
		"name": "Bookstore API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"  const responseJson = pm.response.json();",
							"  pm.collectionVariables.set('bearer_token', responseJson.token);",
							"});",
							"",
							"pm.test(\"Status code is 400\", () => {",
							"  pm.response.to.have.status(400);",
							"  const responseJson = pm.response.json();",
							"  pm.collectionVariables.set('bearer_token', '');",
							"});",
							"",
							"pm.test(\"Status code is 500\", () => {",
							"  pm.response.to.have.status(500);",
							"  const responseJson = pm.response.json();",
							"  pm.collectionVariables.set('bearer_token', '');",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"testuser2@gmail.com\",\n    \"password\": \"testuser2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"  const responseJson = pm.response.json();",
							"  pm.collectionVariables.set('bearer_token', responseJson.token);",
							"});",
							"",
							"pm.test(\"Status code is 400\", () => {",
							"  pm.response.to.have.status(400);",
							"  const responseJson = pm.response.json();",
							"  pm.collectionVariables.set('bearer_token', '');",
							"});",
							"",
							"pm.test(\"Status code is 500\", () => {",
							"  pm.response.to.have.status(500);",
							"  const responseJson = pm.response.json();",
							"  pm.collectionVariables.set('bearer_token', '');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"testuser2\",\n    \"email\": \"testuser2@gmail.com\",\n    \"password\": \"testuser2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/register",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "create book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"book55\",\n    \"pages\": 555,\n    \"title\": \"Book 234\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/book",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"book"
					]
				}
			},
			"response": []
		},
		{
			"name": "get book by id",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/book/3",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"book",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete book by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"  pm.response.to.have.status(200);",
							"  const responseJson = pm.response.json();",
							"  pm.environment.set()",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/book/9",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"book",
						"9"
					]
				}
			},
			"response": []
		},
		{
			"name": "update book",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{bearer_token}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"id\": \"11\",\n    \"name\": \"boook555\",\n    \"pages\": 6081,\n    \"title\": \"Book boook555\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/book",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"book"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:8080"
		},
		{
			"key": "bearer_token",
			"value": ""
		}
	]
}